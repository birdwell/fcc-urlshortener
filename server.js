 /******************************************************
 * PLEASE DO NOT EDIT THIS FILE
 * the verification process may break
 * ***************************************************/

'use strict';

var fs = require('fs');
var express = require('express');
var app = express();
var validUrl = require('valid-url');
const uid = require('uid');
//lets require/import the mongodb native drivers.
var mongodb = require('mongodb');
//We need to work with "MongoClient" interface in order to connect to a mongodb server.
var MongoClient = mongodb.MongoClient;

var db_url = 'mongodb://jbirdwell:' + process.env.MLAB_PASS + '@ds119306.mlab.com:19306/urlshortener';

if (!process.env.DISABLE_XORIGIN) {
  app.use(function(req, res, next) {
    var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
    var origin = req.headers.origin || '*';
    if(!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1){
         console.log(origin);
         res.setHeader('Access-Control-Allow-Origin', origin);
         res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
    }
    next();
  });
}

app.use('/public', express.static(process.cwd() + '/public'));

app.route('/_api/package.json')
  .get(function(req, res, next) {
    console.log('requested');
    fs.readFile(__dirname + '/package.json', function(err, data) {
      if(err) return next(err);
      res.type('txt').send(data.toString());
    });
  });
  
app.route('/')
    .get(function(req, res) {
		  res.sendFile(process.cwd() + '/views/index.html');
    });

app.route('/:shortUrl')
  .get(function(req, res) {
      MongoClient.connect(db_url, function (err, db) {
      if (err) {
        console.log('Unable to connect to the mongoDB server. Error:', err);
      } else {
        console.log('Connection established to', db_url);
        const url = `https://puzzled-meadow.glitch.me/${req.params.shortUrl}`;
        const urls = db.collection('urls');
        console.log('url to find: ', url);
        urls.findOne({ short_url: url }, (err, item) => {
          if (err) {
            res.send('Invalid short url.');
          } else if (item) {
            console.log(item);
            res.redirect(item.original_url);            
          }
          res.send('Couldn\'t find url.');
        })
        db.close();
      }
    });
})

app.route('/new/:url*')
  .get(function(req, res) {
    MongoClient.connect(db_url, function (err, db) {
      if (err) {
        console.log('Unable to connect to the mongoDB server. Error:', err);
      } else {
        console.log('Connection established to', db_url);
        
        const urlToShorten = req.params.url + req.params["0"];
        console.log(urlToShorten);
        
        if (validUrl.isUri(urlToShorten)){
          const urls = db.collection("urls");
          const shortenedUrl = { original_url: urlToShorten, short_url: `https://puzzled-meadow.glitch.me/${uid()}`};
          urls.insert(shortenedUrl);
          res.send(shortenedUrl);
        } else {
            res.send('Invalid URL.')
        }
        // do some work here with the database.
        //Close connection
        db.close();
      }
    });
});

// Respond not found to all the wrong routes
app.use(function(req, res, next){
  res.status(404);
  res.type('txt').send('Not found');
});

// Error Middleware
app.use(function(err, req, res, next) {
  if(err) {
    res.status(err.status || 500)
      .type('txt')
      .send(err.message || 'SERVER ERROR');
  }  
})

app.listen(process.env.PORT, function () {
  console.log('Node.js listening ...');
});

